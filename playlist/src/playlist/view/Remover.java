/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package playlist.view;

import java.io.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

public class Remover extends javax.swing.JFrame {

    private List<String> musicas;

    public Remover() {
        initComponents();
        musicas = new ArrayList<>();
        carregarMusicasDoArquivo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        removido = new javax.swing.JOptionPane();
        notfound = new javax.swing.JOptionPane();
        jLabel1 = new javax.swing.JLabel();
        confirmremover = new javax.swing.JButton();
        NomeRemo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel1.setText("Escolha a musica a ser removida a partir do nome da musica");

        confirmremover.setText("Continuar");
        confirmremover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmremoverActionPerformed(evt);
            }
        });

        NomeRemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeRemoActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jButton1.setText("x");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NomeRemo)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmremover)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(NomeRemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                .addComponent(confirmremover)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void carregarMusicasDoArquivo() {
        try (BufferedReader br = new BufferedReader(new FileReader("musicas.txt"))) {
            String linha;
            while ((linha = br.readLine()) != null) {
                musicas.add(linha);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar músicas do arquivo.");
            e.printStackTrace();
        }
    }

    private void salvarMusicasNoArquivo() {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter("musicas.txt"))) {
            for (String musica : musicas) {
                bw.write(musica);
                bw.newLine();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar músicas no arquivo.");
            e.printStackTrace();
        }
    }
    private void confirmremoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmremoverActionPerformed
    String nome = NomeRemo.getText().toLowerCase().trim(); // Converter para letras minúsculas e remover espaços em branco
    boolean encontrou = false;

    if (!nome.isEmpty()) {
        try (BufferedReader br = new BufferedReader(new FileReader("musicas.txt"));
             BufferedWriter bw = new BufferedWriter(new FileWriter("musicas_temp.txt"))) {

            String linha;
            while ((linha = br.readLine()) != null) {
                String[] campos = linha.split(",");
                if (campos.length >= 1 && campos[0].trim().equalsIgnoreCase(nome)) {
                    encontrou = true;
                } else {
                    bw.write(linha);
                    bw.newLine();
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao ler ou escrever o arquivo de músicas.");
            e.printStackTrace();
        }

        if (encontrou) {
            // Apague o arquivo original
            File arquivoOriginal = new File("musicas.txt");
            arquivoOriginal.delete();

            // Renomeie o arquivo temporário para substituir o original
            File arquivoTemp = new File("musicas_temp.txt");
            arquivoTemp.renameTo(arquivoOriginal);

            JOptionPane.showMessageDialog(this, "Música removida com sucesso!");
            NomeRemo.setText("");
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Música não encontrada!");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Informe o nome da música.");
    }
    }//GEN-LAST:event_confirmremoverActionPerformed

    private void NomeRemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeRemoActionPerformed

    }//GEN-LAST:event_NomeRemoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Remover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Remover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Remover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Remover.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Remover().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NomeRemo;
    private javax.swing.JButton confirmremover;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JOptionPane notfound;
    private javax.swing.JOptionPane removido;
    // End of variables declaration//GEN-END:variables
}
